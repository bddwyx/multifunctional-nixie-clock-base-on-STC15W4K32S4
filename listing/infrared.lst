C51 COMPILER V9.54   INFRARED                                                              01/27/2020 20:54:03 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE INFRARED
OBJECT MODULE PLACED IN ..\object\infrared.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\user\src\infrared.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\user\inc
                    -;..\drivers\inc;..\main) DEBUG OBJECTEXTEND PRINT(..\listing\infrared.lst) TABS(2) OBJECT(..\object\infrared.obj)

line level    source

   1          #ifndef _INFRARED_C
   2          #define _INFRARED_C
   3          
   4          #include "config.h"
   5          #include "infrared.h"
   6          #include "VS1838B.h"
   7          #include "74hc595.h"
   8          #include "alarm_set.h"
   9          #include "buzz.h"
  10          #include "UART.h"
  11          #include "pwm.h"
  12          #include "ISP_IAP.h"
  13          
  14          #endif
  15          
  16          unsigned int pre;        //时刻缓存
  17          unsigned char volatile environment=0;  //功能
  18          unsigned char vs_cnt=0;
  19          
  20          bit vs_push=0;           //按键按下标志
  21          
  22          void ini_vs()
  23          {
  24   1          EA=1;
  25   1      
  26   1        TMOD&=0X0F;
  27   1        TH0=0;
  28   1        TL0=0;
  29   1      
  30   1        ET0=1;
  31   1        EX0=1;
  32   1        PX0=1;  
  33   1        
  34   1        TR0=1;    
  35   1      }
  36          
  37          void ex0_isr() interrupt 0
  38          {
  39   1        unsigned int T0;
  40   1        
  41   1        TR0=0;
  42   1        T0=TH0*256+TL0;
  43   1        vs_figure(T0);
  44   1        TR0=1;
  45   1      }
  46          
  47          void inter0() interrupt 1
  48          {
  49   1          vs_cnt++;
  50   1            
  51   1        if(vs_cnt==5) 
  52   1        {
  53   2          vs_cnt=0;
  54   2          vs_flag=0;
C51 COMPILER V9.54   INFRARED                                                              01/27/2020 20:54:03 PAGE 2   

  55   2          repeat_flag=0;
  56   2          vs_push=0;
  57   2      
  58   2          r_flag=0;                  //这两句非常关键，强干扰下的自动复位，没有的话会导致红外卡死
  59   2          pre_flag=0;
  60   2        }
  61   1      }
  62          
  63          /*
  64            以上是配合红外接收
  65                              */
  66          
  67          unsigned char code vs_code[]={
  68              104,48,24,122,16,56,90,66,74,82,
  69            162,      //电源
  70            2,194,          //慢进快进
  71            168,144,    //-  +
  72            98,             //mode
  73            226,            //mute
  74            224,      //EQ
  75            152,      //RPT
  76              };
  77          
  78          void vs_detect()                      //红外信号检测
  79          {
  80   1          static unsigned char vs_value=255;    
  81   1      
  82   1          if(vs_complete)
  83   1        { 
  84   2            if((vs_value!=144)&&(vs_value!=168)&&(vs_value!=255))
  85   2          {
  86   3              tube_switch=1;
  87   3              tube_cnt=0;
  88   3          }
  89   2      
  90   2          if(255==vs_value) 
  91   2          {
  92   3              vs_value=vs_value_get(vs);
  93   3            vs_push=1;
  94   3          }
  95   2      
  96   2          switch(vs_value)
  97   2          {
  98   3              case 162:
  99   3              tube_shutdown();
 100   3              tube_cnt=0;
 101   3      
 102   3              break;
 103   3      
 104   3            case 98:
 105   3              if(vs_push)
 106   3              {
 107   4                  vs_push=0;
 108   4      
 109   4                  environment++;
 110   4                  if(environment>3) environment=0;
 111   4      
 112   4                  switch(environment)
 113   4                {
 114   5                    case 0:
 115   5                      date_switch=0; 
 116   5                    random_switch=0;
C51 COMPILER V9.54   INFRARED                                                              01/27/2020 20:54:03 PAGE 3   

 117   5      
 118   5                    break;
 119   5      
 120   5                              case 1:
 121   5                      date_switch=1; 
 122   5                    random_switch=0;
 123   5      
 124   5                    break;
 125   5      
 126   5                  case 2:
 127   5                      date_switch=0; 
 128   5                    random_switch=1;
 129   5                    nixie=0;
 130   5      
 131   5                    break;
 132   5      
 133   5                  case 3:
 134   5                    date_switch=0; 
 135   5                    random_switch=0;
 136   5                    environment=0;
 137   5                    tube_switch=0;
 138   5                    //tube_shutdown();
 139   5      
 140   5                    break;
 141   5      
 142   5                }
 143   4              }
 144   3              
 145   3                break;
 146   3      
 147   3            case 226:
 148   3                alarm_flag=0;
 149   3              alarm_state[1]=0;
 150   3              alarm_state[0]=0;
 151   3              stopbuzz();
 152   3      
 153   3              break;
 154   3      
 155   3            case 224:
 156   3                if(vs_times>5)
 157   3              {
 158   4                  vs_times=5;
 159   4                uart_write("224");
 160   4              }
 161   3      
 162   3              if(vs_push)
 163   3              {
 164   4                  vs_push=0;
 165   4                uart_write("start");
 166   4                rgb_change=~rgb_change;
 167   4              }
 168   3      
 169   3              break;
 170   3      
 171   3            case 144:
 172   3                if(vs_times>5)
 173   3              {
 174   4                  if(pwm_state<15)
 175   4                {
 176   5                    pwm_state++;
 177   5                  ini_pwm(pwm_state);
 178   5                  rom_sector_erase(0x0200);
C51 COMPILER V9.54   INFRARED                                                              01/27/2020 20:54:03 PAGE 4   

 179   5                            rom_byte_write(0x0200,pwm_state);
 180   5                }
 181   4                vs_times=5;
 182   4              }
 183   3      
 184   3              if(vs_push)
 185   3              {
 186   4                  vs_push=0;
 187   4                if(pwm_state<15)
 188   4                {
 189   5                    pwm_state++;
 190   5                  ini_pwm(pwm_state);
 191   5                  rom_sector_erase(0x0200);
 192   5                            rom_byte_write(0x0200,pwm_state);
 193   5                }
 194   4              }
 195   3      
 196   3              break;
 197   3      
 198   3            case 168:
 199   3                if(vs_times>5)
 200   3              {
 201   4                  if(pwm_state>1)
 202   4                {
 203   5                    pwm_state--;
 204   5                  ini_pwm(pwm_state);
 205   5                  rom_sector_erase(0x0200);
 206   5                            rom_byte_write(0x0200,pwm_state);
 207   5                }
 208   4                vs_times=5;
 209   4              }
 210   3      
 211   3              if(vs_push)
 212   3              {
 213   4                  vs_push=0;
 214   4                if(pwm_state>1)
 215   4                {
 216   5                    pwm_state--;
 217   5                  ini_pwm(pwm_state);
 218   5                  rom_sector_erase(0x0200);
 219   5                            rom_byte_write(0x0200,pwm_state);
 220   5                }
 221   4              }
 222   3      
 223   3              break;
 224   3      
 225   3            case 0:
 226   3                uart_write("0");
 227   3              break;
 228   3      
 229   3            case 255:
 230   3                uart_write("255");
 231   3      
 232   3            default :uart_write("default");
 233   3                     vs_value=255;
 234   3      
 235   3          }
 236   2          
 237   2          if(!repeat_flag)
 238   2          {
 239   3              vs_value=255;
 240   3            vs_complete=0;
C51 COMPILER V9.54   INFRARED                                                              01/27/2020 20:54:03 PAGE 5   

 241   3            vs_times=0;
 242   3            vs_push=0;
 243   3          }
 244   2            
 245   2      
 246   2        }   
 247   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    610    ----
   CONSTANT SIZE    =     43    ----
   XDATA SIZE       =      5    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
