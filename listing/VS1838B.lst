C51 COMPILER V9.54   VS1838B                                                               01/27/2020 20:54:01 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE VS1838B
OBJECT MODULE PLACED IN ..\object\VS1838B.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\drivers\src\VS1838B.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\user\i
                    -nc;..\drivers\inc;..\main) DEBUG OBJECTEXTEND PRINT(..\listing\VS1838B.lst) TABS(2) OBJECT(..\object\VS1838B.obj)

line level    source

   1          /*需要外部函数防止超时，大概是180ms一个周期，重复码的位置重置计时器
   2            电平变化时调用figure_get()
   3            vs_complete=1且repeat_flag=0时，vs_value与vs_time有效
   4                                            */
   5          
   6          /*
   7              高能预警
   8            前方逻辑炸弹
   9                     */
  10          
  11          #ifndef _VS1838B_C
  12          #define _VS1838B_C
  13          
  14          #include "VS1838B.h"
  15          #include "config.h"
  16          
  17          #endif
  18          
  19          extern unsigned char vs_cnt;
  20          
  21          bit vs_flag=0,r_flag=0,vs_complete=0,repeat_flag=0,pre_flag=0;
  22          
  23          unsigned char vs_times=0;
  24          unsigned char vs[32]={0};
  25          
  26          unsigned char vs_value_get(unsigned char *ptr)         //得到红外码
  27          {
  28   1          unsigned char i;
  29   1        unsigned char vs_value=0;
  30   1      
  31   1        for(i=16;i<24;i++)
  32   1        {
  33   2            if(ptr[i]==ptr[i+8]) break;
  34   2        }
  35   1        if(24==i)
  36   1        {      
  37   2            for(i=16;i<24;i++)
  38   2          {
  39   3              vs_value=vs_value*2+ptr[i];
  40   3          }
  41   2        }
  42   1        
  43   1        return vs_value;
  44   1      }
  45          
  46          unsigned char time_process(unsigned int fig,unsigned int pre)
  47          {
  48   1        unsigned int temp;
  49   1      
  50   1        if(fig>pre) temp=(fig-pre); 
  51   1            else temp=(fig-pre+65536);
  52   1      
  53   1        if((0x300<temp)&&(temp<0x4F0)) return 0;                 //写0
  54   1            else if((0xA00<temp)&&(temp<0xE80)) return 1;            //写1
C51 COMPILER V9.54   VS1838B                                                               01/27/2020 20:54:01 PAGE 2   

  55   1              else if((0xE80<temp)&&(temp<0x1F00)) return 2;           //重复码
  56   1                  else return 3;                         //鬼知道是啥
  57   1      }
  58          
  59          void vs_figure(unsigned int fig)    //在中断中调用，处理红外信号
  60          {
  61   1          static unsigned char index=0;
  62   1        static unsigned int pre,temp;
  63   1      
  64   1        r_flag=~r_flag;        //奇偶标志
  65   1        if(0==r_flag) pre=fig;   //下降沿捕捉
  66   1          else if(1==pre_flag)       //开始捕捉
  67   1            {
  68   2              if(1==vs_flag)     //检测正式开始标志
  69   2            {
  70   3                if(0==repeat_flag)    //重复码以前
  71   3              {
  72   4                  vs[index++]=time_process(fig,pre); 
  73   4              }
  74   3            }
  75   2            else if((0x1C00<fig-pre)&&(fig-pre<0x2400)) vs_flag=1;     //检测起始码
  76   2          }
  77   1          else if(0==repeat_flag) pre_flag=1;    //排除第一次的乱码
  78   1            else 
  79   1            {
  80   2                temp=time_process(fig,pre);
  81   2              if(2==temp)                  //重复码次数检测(由其他中断终止)
  82   2                {
  83   3                    vs_times++;                //刷新外部防超时定时器
  84   3                  vs_cnt=0;
  85   3                }
  86   2            }
  87   1      
  88   1        if(index==32)
  89   1        {
  90   2            index=0;
  91   2          pre_flag=0;
  92   2          repeat_flag=1;       
  93   2          vs_complete=1;                      //通知外部函数
  94   2        }
  95   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    378    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     38       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
