C51 COMPILER V9.54   ALARM_SET                                                             01/27/2020 20:54:02 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE ALARM_SET
OBJECT MODULE PLACED IN ..\object\alarm_set.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\user\src\alarm_set.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\user\in
                    -c;..\drivers\inc;..\main) DEBUG OBJECTEXTEND PRINT(..\listing\alarm_set.lst) TABS(2) OBJECT(..\object\alarm_set.obj)

line level    source

   1          #ifndef _ALARM_SET_C
   2          #define _ALARM_SET_C
   3          
   4          #include "config.h"
   5          #include "alarm_set.h"
   6          #include "ISP_IAP.h"
   7          #include "buzz.h"
   8          #include "DS1302.h"
   9          
  10          #endif
  11          
  12          #define ALARM_NUMBER 3
  13          
  14          unsigned char xdata alarm1[4],alarm2[4],alarm3[4];
  15          unsigned char xdata *ptr_alarm[]={alarm1,alarm2,alarm3};
  16          unsigned char alarm_state[2]={0};
  17          
  18          bit alarm_flag=0;
  19          
  20          void ini_alarm()
  21          {
  22   1          unsigned char i,j;
  23   1      
  24   1        for(i=0;i<ALARM_NUMBER;i++)
  25   1        {
  26   2            for(j=0;j<4;j++)
  27   2          {
  28   3              ptr_alarm[i][j]=rom_byte_read(i*4+j);
  29   3          }
  30   2        }
  31   1      }
  32          
  33          void alarm_set(unsigned char *alarm,unsigned char num)
  34          {
  35   1          unsigned char i,j;
  36   1      
  37   1        for(i=0;i<4;i++) ptr_alarm[num-1][i]=alarm[i]-'0';
  38   1      
  39   1        rom_sector_erase(0x0000);
  40   1        for(i=0;i<ALARM_NUMBER;i++)
  41   1        {
  42   2          for(j=0;j<4;j++) rom_byte_write(i*4+j,ptr_alarm[i][j]);
  43   2        }
  44   1      }
  45          
  46          void alarm_detect()
  47          {
  48   1        unsigned char i;
  49   1        static unsigned char index=0;
  50   1      
  51   1        if((1==song_finished)&&(0==alarm_state[0]))             //闹钟归位
  52   1        {
  53   2            alarm_flag=0;
  54   2          alarm_state[0]=0;
C51 COMPILER V9.54   ALARM_SET                                                             01/27/2020 20:54:02 PAGE 2   

  55   2        }   
  56   1      
  57   1          if((0==alarm_flag)&&(0==figure[4])&&(0==figure[5])) 
  58   1        {
  59   2          for(i=0;i<4;i++)                      //闹钟比较
  60   2            {
  61   3              if(ptr_alarm[index][i]!=figure[i]) break;
  62   3            }
  63   2            if(i==4)                          //打开闹钟
  64   2            {
  65   3              alarm_state[0]=index+1;
  66   3            alarm_state[1]=2;
  67   3              alarm_flag=1;
  68   3            }     
  69   2        } 
  70   1        
  71   1        if(alarm_state[1]!=0)
  72   1        {
  73   2            if(song_finished)
  74   2          {
  75   3              start_song(alarm_state[0]);
  76   3            alarm_state[1]--;
  77   3          }
  78   2      
  79   2          if(0==alarm_state[1]) alarm_state[0]=0;
  80   2        } 
  81   1      
  82   1      
  83   1        index++;
  84   1        if(index>ALARM_NUMBER-1) index=0;          //
  85   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    453    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     21       8
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
